#! /usr/bin/env ruby
# coding: utf-8

# split a line to lines.

require "pp"
require "optparse"
require "rubygems"
require "tefil"


# option analysis
options = {
  :period => true,
  :strs => "",
  :except => "" 
}
op = OptionParser.new
#op.banner = [
#  "Usage: #{File.basename("#{__FILE__}")} [options] [files]",
#].join("\n")
op.on("-o"     , "--overwrite" , "Overwrite."){ options[:overwrite] =    true}
op.on("-c str" , "--char=str"  , "Add target strings."){ |v| options[:strs] = v}
op.on("-e str" , "--except=str"  , "Except strings."){ |v| options[:except] = v}
op.on("-s"     , "--space"     , "Add space to target strs."){ options[:space] = true}
op.on("-P"     , "--without-period" , "Exclude period from target strs."){ options[:period] = false}
op.parse!(ARGV)

options[:overwrite] ||= false

#EXCEPT_WORDS = ["Fig.", "FIG."]


target_strs = []
target_strs += options[:strs].split(" ")
target_strs << "." if options[:period]
target_strs << ' ' if options[:space]
target_strs.uniq!

#pp target_strs; exit

is = Tefil::LineSplitter.new(target_strs: target_strs,
                             except_words: options[:except].split(" "),
                             options: options)
pp is; exit
is.filter(ARGV)
